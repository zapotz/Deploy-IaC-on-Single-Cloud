name: Deploy to AWS

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ansible

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Terraform Init
        run: |
          cd terraform
          terraform init

      - name: Terraform Apply
        run: |
          cd terraform
          terraform apply -auto-approve

      - name: Get EC2 IP
        run: |
          echo "EC2_IP=$(cd terraform && terraform output -raw public_ip)" >> $GITHUB_ENV

      - name: Deploy with Ansible
        run: |
          echo "[webservers]" > ansible/inventory.ini
          echo "web ansible_host=${{ env.EC2_IP }} ansible_user=ec2-user ansible_ssh_private_key_file=~/.ssh/id_rsa" >> ansible/inventory.ini
          ansible-playbook -i ansible/inventory.ini ansible/playbook.yml
        env:
          ANSIBLE_HOST_KEY_CHECKING: False

      - name: Clean up
        if: always()
        run: |
          cd terraform
          terraform destroy -auto-approve
